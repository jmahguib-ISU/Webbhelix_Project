> ##########Running an ANalysis Of VAriance and a Kruskal-Wallis test in R##########
> 
> 
> ###Manually load the 'dplyr' library package before running this script###
> 
> 
> ###Set the working directory as the directory where your input files are stored
> 
> setwd("~/Desktop/Shell_Color/aov_4_popclusters_input_files")
> 
> 
> ###Import tab delimited .txt file and assign it to object "my_data"
> 
> my_data <- read.delim("Shell_Transect_Ferets_Diameter_R_aov_input_data.txt", header = TRUE, sep = "\t", quote = "")
> 
> 
> ###Have the 'dplyr' R package take a random sampling of your data and print it to the console so you can check that your using the correct input file and that it's formatted appropriately
> 
> set.seed(1234)
> dplyr::sample_n(my_data, 10)
    Ferets_Diameter Population
31             0.77   Cluster1
166            0.92   Cluster2
162            0.90   Cluster2
165            0.86   Cluster2
227            0.81   Cluster3
168            1.01   Cluster2
3              0.87   Cluster1
61             0.80   Cluster1
173            0.89   Cluster2
133            0.97   Cluster2
> 
> 
> ###Print your data's group names (called by R "levels") to check they appear in desired order
> 
> levels(my_data$Population)
[1] "Cluster1" "Cluster2" "Cluster3" "Cluster4"
> 
> 
> ###Calculate and output summary statistics for your data, including datum counts, data mean and standard deviation
> 
> group_by(my_data, Population) %>%
+   summarise(
+     count = n(),
+     mean = mean(Ferets_Diameter, na.rm = TRUE),
+     sd = sd(Ferets_Diameter, na.rm = TRUE)
+   )
# A tibble: 4 x 4
  Population count  mean     sd
  <fct>      <int> <dbl>  <dbl>
1 Cluster1      90 0.778 0.0759
2 Cluster2     108 0.873 0.0766
3 Cluster3      47 0.801 0.105 
4 Cluster4      22 0.920 0.0438
> 
> 
> 
> ###Assign the command for running an analysis of variance (aov) to an object, in this case called "res.aov;" the portion of the aov command that is in parentheses consists of the column header for the column containing your dependant variable (your data), followed by a '~' and then the column header for the column containing your independent variable (your group assignments for each data point), followed by designation of your previously established data object to 'data =' (in this case "my_data")
> 
> res.aov <- aov(Ferets_Diameter ~ Population, data = my_data)
> 
> 
> ###Print a summary of the results of the ANOVA analyses designated by the previous command
> 
> summary(res.aov)
             Df Sum Sq Mean Sq F value Pr(>F)    
Population    3 0.6594 0.21980   34.28 <2e-16 ***
Residuals   263 1.6862 0.00641                   
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
> 
> 
> 
> ###Run a Tukey multiple pairwise comparisons test on the fitted ANOVA from the previous command, and output the results to check which pairwise group comparisons are statistically significantly different from each other
> 
> TukeyHSD(res.aov)
  Tukey multiple comparisons of means
    95% family-wise confidence level

Fit: aov(formula = Ferets_Diameter ~ Population, data = my_data)

$Population
                         diff           lwr         upr     p adj
Cluster2-Cluster1  0.09479630  0.0652487691  0.12434382 0.0000000
Cluster3-Cluster1  0.02317494 -0.0140823933  0.06043228 0.3757140
Cluster4-Cluster1  0.14256566  0.0933279185  0.19180339 0.0000000
Cluster3-Cluster2 -0.07162136 -0.1077978698 -0.03544484 0.0000035
Cluster4-Cluster2  0.04776936 -0.0006556962  0.09619442 0.0547321
Cluster4-Cluster3  0.11939072  0.0659113861  0.17287005 0.0000001

> 
> 
> ###Plot first the Residuals vs Fitted values from the fitted ANOVA in order to check for homogeneity of variance (which is an assumption of ANOVA), then plot a normality plot of residuals to check that the data are normally distributed (another assumption of ANOVA); the quantiles of the residuals are plotted against the quantiles of the normal distribution
> 
> plot(res.aov, 1)
> plot(res.aov, 2)
> 
> 
> ###Perform a Shapiro-Wilk test as an additional check for normality of the data
> 
> aov_residuals <- residuals(object = res.aov )
> shapiro.test(x = aov_residuals )

	Shapiro-Wilk normality test

data:  aov_residuals
W = 0.94603, p-value = 2.38e-08

> 
> 
> ###In the case that either or both tests for the assumptions of an ANOVA are not passed, a non-parametric test for comparison of group means is performed here in the form of a Kruskal-Wallis rank sum test
> 
> kruskal.test(Ferets_Diameter ~ Population, data = my_data)

	Kruskal-Wallis rank sum test

data:  Ferets_Diameter by Population
Kruskal-Wallis chi-squared = 91.984, df = 3, p-value < 2.2e-16

> 
> 
> ###As a follow-up to the Kruskal-Wallis to check which specific group pairs are statistically significantly different from each other, a pairwise t-test is done here with corrections for multiple testing
> 
> pairwise.t.test(my_data$Ferets_Diameter, my_data$Population,
+                 p.adjust.method = "BH")

	Pairwise comparisons using t tests with pooled SD 

data:  my_data$Ferets_Diameter and my_data$Population 

         Cluster1 Cluster2 Cluster3
Cluster2 3.4e-14  -        -       
Cluster3 0.109    8.9e-07  -       
Cluster4 3.2e-12  0.014    4.4e-08 

P value adjustment method: BH 
> 
> 
> 
> 
> #####Example commands for making histogram plots to check data distributions, using R built-in hist() function and the ggplot2 package#####
> 
> hist(my_data$Ferets_Diameter)
> qplot(my_data$Ferets_Diameter, geom="histogram")
`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.
> #ggplot(data=my_data, aes(my_data$Ferets_Diameter)) + geom_histogram()
> 